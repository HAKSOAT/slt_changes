2023-09-17 23:08:08,637 Hello! This is Joey-NMT.
2023-09-17 23:08:08,642 Total params: 58143760
2023-09-17 23:08:08,643 Trainable parameters: ['decoder.layer_norm.bias', 'decoder.layer_norm.weight', 'decoder.layers.0.dec_layer_norm.bias', 'decoder.layers.0.dec_layer_norm.weight', 'decoder.layers.0.feed_forward.layer_norm.bias', 'decoder.layers.0.feed_forward.layer_norm.weight', 'decoder.layers.0.feed_forward.pwff_layer.0.bias', 'decoder.layers.0.feed_forward.pwff_layer.0.weight', 'decoder.layers.0.feed_forward.pwff_layer.3.bias', 'decoder.layers.0.feed_forward.pwff_layer.3.weight', 'decoder.layers.0.src_trg_att.k_layer.bias', 'decoder.layers.0.src_trg_att.k_layer.weight', 'decoder.layers.0.src_trg_att.output_layer.bias', 'decoder.layers.0.src_trg_att.output_layer.weight', 'decoder.layers.0.src_trg_att.q_layer.bias', 'decoder.layers.0.src_trg_att.q_layer.weight', 'decoder.layers.0.src_trg_att.v_layer.bias', 'decoder.layers.0.src_trg_att.v_layer.weight', 'decoder.layers.0.trg_trg_att.k_layer.bias', 'decoder.layers.0.trg_trg_att.k_layer.weight', 'decoder.layers.0.trg_trg_att.output_layer.bias', 'decoder.layers.0.trg_trg_att.output_layer.weight', 'decoder.layers.0.trg_trg_att.q_layer.bias', 'decoder.layers.0.trg_trg_att.q_layer.weight', 'decoder.layers.0.trg_trg_att.v_layer.bias', 'decoder.layers.0.trg_trg_att.v_layer.weight', 'decoder.layers.0.x_layer_norm.bias', 'decoder.layers.0.x_layer_norm.weight', 'decoder.layers.1.dec_layer_norm.bias', 'decoder.layers.1.dec_layer_norm.weight', 'decoder.layers.1.feed_forward.layer_norm.bias', 'decoder.layers.1.feed_forward.layer_norm.weight', 'decoder.layers.1.feed_forward.pwff_layer.0.bias', 'decoder.layers.1.feed_forward.pwff_layer.0.weight', 'decoder.layers.1.feed_forward.pwff_layer.3.bias', 'decoder.layers.1.feed_forward.pwff_layer.3.weight', 'decoder.layers.1.src_trg_att.k_layer.bias', 'decoder.layers.1.src_trg_att.k_layer.weight', 'decoder.layers.1.src_trg_att.output_layer.bias', 'decoder.layers.1.src_trg_att.output_layer.weight', 'decoder.layers.1.src_trg_att.q_layer.bias', 'decoder.layers.1.src_trg_att.q_layer.weight', 'decoder.layers.1.src_trg_att.v_layer.bias', 'decoder.layers.1.src_trg_att.v_layer.weight', 'decoder.layers.1.trg_trg_att.k_layer.bias', 'decoder.layers.1.trg_trg_att.k_layer.weight', 'decoder.layers.1.trg_trg_att.output_layer.bias', 'decoder.layers.1.trg_trg_att.output_layer.weight', 'decoder.layers.1.trg_trg_att.q_layer.bias', 'decoder.layers.1.trg_trg_att.q_layer.weight', 'decoder.layers.1.trg_trg_att.v_layer.bias', 'decoder.layers.1.trg_trg_att.v_layer.weight', 'decoder.layers.1.x_layer_norm.bias', 'decoder.layers.1.x_layer_norm.weight', 'decoder.layers.2.dec_layer_norm.bias', 'decoder.layers.2.dec_layer_norm.weight', 'decoder.layers.2.feed_forward.layer_norm.bias', 'decoder.layers.2.feed_forward.layer_norm.weight', 'decoder.layers.2.feed_forward.pwff_layer.0.bias', 'decoder.layers.2.feed_forward.pwff_layer.0.weight', 'decoder.layers.2.feed_forward.pwff_layer.3.bias', 'decoder.layers.2.feed_forward.pwff_layer.3.weight', 'decoder.layers.2.src_trg_att.k_layer.bias', 'decoder.layers.2.src_trg_att.k_layer.weight', 'decoder.layers.2.src_trg_att.output_layer.bias', 'decoder.layers.2.src_trg_att.output_layer.weight', 'decoder.layers.2.src_trg_att.q_layer.bias', 'decoder.layers.2.src_trg_att.q_layer.weight', 'decoder.layers.2.src_trg_att.v_layer.bias', 'decoder.layers.2.src_trg_att.v_layer.weight', 'decoder.layers.2.trg_trg_att.k_layer.bias', 'decoder.layers.2.trg_trg_att.k_layer.weight', 'decoder.layers.2.trg_trg_att.output_layer.bias', 'decoder.layers.2.trg_trg_att.output_layer.weight', 'decoder.layers.2.trg_trg_att.q_layer.bias', 'decoder.layers.2.trg_trg_att.q_layer.weight', 'decoder.layers.2.trg_trg_att.v_layer.bias', 'decoder.layers.2.trg_trg_att.v_layer.weight', 'decoder.layers.2.x_layer_norm.bias', 'decoder.layers.2.x_layer_norm.weight', 'decoder.output_layer.weight', 'encoder.layer_norm.bias', 'encoder.layer_norm.weight', 'encoder.layers.0.feed_forward.layer_norm.bias', 'encoder.layers.0.feed_forward.layer_norm.weight', 'encoder.layers.0.feed_forward.pwff_layer.0.bias', 'encoder.layers.0.feed_forward.pwff_layer.0.weight', 'encoder.layers.0.feed_forward.pwff_layer.3.bias', 'encoder.layers.0.feed_forward.pwff_layer.3.weight', 'encoder.layers.0.layer_norm.bias', 'encoder.layers.0.layer_norm.weight', 'encoder.layers.0.src_src_att.k_layer.bias', 'encoder.layers.0.src_src_att.k_layer.weight', 'encoder.layers.0.src_src_att.output_layer.bias', 'encoder.layers.0.src_src_att.output_layer.weight', 'encoder.layers.0.src_src_att.q_layer.bias', 'encoder.layers.0.src_src_att.q_layer.weight', 'encoder.layers.0.src_src_att.v_layer.bias', 'encoder.layers.0.src_src_att.v_layer.weight', 'encoder.layers.1.feed_forward.layer_norm.bias', 'encoder.layers.1.feed_forward.layer_norm.weight', 'encoder.layers.1.feed_forward.pwff_layer.0.bias', 'encoder.layers.1.feed_forward.pwff_layer.0.weight', 'encoder.layers.1.feed_forward.pwff_layer.3.bias', 'encoder.layers.1.feed_forward.pwff_layer.3.weight', 'encoder.layers.1.layer_norm.bias', 'encoder.layers.1.layer_norm.weight', 'encoder.layers.1.src_src_att.k_layer.bias', 'encoder.layers.1.src_src_att.k_layer.weight', 'encoder.layers.1.src_src_att.output_layer.bias', 'encoder.layers.1.src_src_att.output_layer.weight', 'encoder.layers.1.src_src_att.q_layer.bias', 'encoder.layers.1.src_src_att.q_layer.weight', 'encoder.layers.1.src_src_att.v_layer.bias', 'encoder.layers.1.src_src_att.v_layer.weight', 'encoder.layers.2.feed_forward.layer_norm.bias', 'encoder.layers.2.feed_forward.layer_norm.weight', 'encoder.layers.2.feed_forward.pwff_layer.0.bias', 'encoder.layers.2.feed_forward.pwff_layer.0.weight', 'encoder.layers.2.feed_forward.pwff_layer.3.bias', 'encoder.layers.2.feed_forward.pwff_layer.3.weight', 'encoder.layers.2.layer_norm.bias', 'encoder.layers.2.layer_norm.weight', 'encoder.layers.2.src_src_att.k_layer.bias', 'encoder.layers.2.src_src_att.k_layer.weight', 'encoder.layers.2.src_src_att.output_layer.bias', 'encoder.layers.2.src_src_att.output_layer.weight', 'encoder.layers.2.src_src_att.q_layer.bias', 'encoder.layers.2.src_src_att.q_layer.weight', 'encoder.layers.2.src_src_att.v_layer.bias', 'encoder.layers.2.src_src_att.v_layer.weight', 'gloss_output_layer.bias', 'gloss_output_layer.weight', 'sgn_embed.ln.bias', 'sgn_embed.ln.weight', 'sgn_embed.norm.norm.bias', 'sgn_embed.norm.norm.weight', 'txt_embed.lut.weight', 'txt_embed.norm.norm.bias', 'txt_embed.norm.norm.weight']
2023-09-17 23:08:10,881 cfg.name                           : sign_experiment
2023-09-17 23:08:10,881 cfg.data.data_path                 : data/
2023-09-17 23:08:10,882 cfg.data.version                   : phoenix_2014_trans
2023-09-17 23:08:10,882 cfg.data.sgn                       : sign
2023-09-17 23:08:10,882 cfg.data.txt                       : text
2023-09-17 23:08:10,882 cfg.data.gls                       : gloss
2023-09-17 23:08:10,882 cfg.data.train                     : asl_flow/ASL_train_data_flow.pickle
2023-09-17 23:08:10,882 cfg.data.dev                       : asl_flow/ASL_val_data_flow.pickle
2023-09-17 23:08:10,882 cfg.data.test                      : asl_flow/ASL_test_data_flow.pickle
2023-09-17 23:08:10,882 cfg.data.feature_size              : 1024
2023-09-17 23:08:10,882 cfg.data.level                     : word
2023-09-17 23:08:10,883 cfg.data.txt_lowercase             : True
2023-09-17 23:08:10,883 cfg.data.max_sent_length           : 400
2023-09-17 23:08:10,883 cfg.data.random_train_subset       : -1
2023-09-17 23:08:10,883 cfg.data.random_dev_subset         : -1
2023-09-17 23:08:10,883 cfg.testing.recognition_beam_sizes : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-17 23:08:10,883 cfg.testing.translation_beam_sizes : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-17 23:08:10,883 cfg.testing.translation_beam_alphas : [-1, 0, 1, 2, 3, 4, 5]
2023-09-17 23:08:10,883 cfg.training.reset_best_ckpt       : False
2023-09-17 23:08:10,883 cfg.training.reset_scheduler       : False
2023-09-17 23:08:10,883 cfg.training.reset_optimizer       : False
2023-09-17 23:08:10,884 cfg.training.random_seed           : 42
2023-09-17 23:08:10,884 cfg.training.model_dir             : ./sign_sample_model
2023-09-17 23:08:10,884 cfg.training.recognition_loss_weight : 1.0
2023-09-17 23:08:10,884 cfg.training.translation_loss_weight : 1.0
2023-09-17 23:08:10,884 cfg.training.eval_metric           : bleu
2023-09-17 23:08:10,884 cfg.training.optimizer             : adam
2023-09-17 23:08:10,884 cfg.training.learning_rate         : 0.001
2023-09-17 23:08:10,884 cfg.training.batch_size            : 32
2023-09-17 23:08:10,884 cfg.training.num_valid_log         : 5
2023-09-17 23:08:10,884 cfg.training.epochs                : 15
2023-09-17 23:08:10,884 cfg.training.early_stopping_metric : eval_metric
2023-09-17 23:08:10,885 cfg.training.batch_type            : sentence
2023-09-17 23:08:10,885 cfg.training.translation_normalization : batch
2023-09-17 23:08:10,885 cfg.training.eval_recognition_beam_size : 1
2023-09-17 23:08:10,885 cfg.training.eval_translation_beam_size : 1
2023-09-17 23:08:10,885 cfg.training.eval_translation_beam_alpha : -1
2023-09-17 23:08:10,885 cfg.training.overwrite             : True
2023-09-17 23:08:10,885 cfg.training.shuffle               : True
2023-09-17 23:08:10,885 cfg.training.use_cuda              : True
2023-09-17 23:08:10,885 cfg.training.translation_max_output_length : 30
2023-09-17 23:08:10,885 cfg.training.keep_last_ckpts       : 1
2023-09-17 23:08:10,886 cfg.training.batch_multiplier      : 1
2023-09-17 23:08:10,886 cfg.training.logging_freq          : 100
2023-09-17 23:08:10,886 cfg.training.validation_freq       : 100
2023-09-17 23:08:10,886 cfg.training.betas                 : [0.9, 0.998]
2023-09-17 23:08:10,886 cfg.training.scheduling            : plateau
2023-09-17 23:08:10,886 cfg.training.learning_rate_min     : 1e-07
2023-09-17 23:08:10,886 cfg.training.weight_decay          : 0.001
2023-09-17 23:08:10,886 cfg.training.patience              : 8
2023-09-17 23:08:10,886 cfg.training.decrease_factor       : 0.7
2023-09-17 23:08:10,886 cfg.training.label_smoothing       : 0.0
2023-09-17 23:08:10,886 cfg.model.initializer              : xavier
2023-09-17 23:08:10,887 cfg.model.bias_initializer         : zeros
2023-09-17 23:08:10,887 cfg.model.init_gain                : 1.0
2023-09-17 23:08:10,887 cfg.model.embed_initializer        : xavier
2023-09-17 23:08:10,887 cfg.model.embed_init_gain          : 1.0
2023-09-17 23:08:10,887 cfg.model.tied_softmax             : False
2023-09-17 23:08:10,887 cfg.model.encoder.type             : transformer
2023-09-17 23:08:10,887 cfg.model.encoder.num_layers       : 3
2023-09-17 23:08:10,887 cfg.model.encoder.num_heads        : 8
2023-09-17 23:08:10,887 cfg.model.encoder.embeddings.embedding_dim : 512
2023-09-17 23:08:10,887 cfg.model.encoder.embeddings.scale : False
2023-09-17 23:08:10,888 cfg.model.encoder.embeddings.dropout : 0.1
2023-09-17 23:08:10,888 cfg.model.encoder.embeddings.norm_type : batch
2023-09-17 23:08:10,888 cfg.model.encoder.embeddings.activation_type : softsign
2023-09-17 23:08:10,888 cfg.model.encoder.hidden_size      : 512
2023-09-17 23:08:10,888 cfg.model.encoder.ff_size          : 2048
2023-09-17 23:08:10,888 cfg.model.encoder.dropout          : 0.1
2023-09-17 23:08:10,888 cfg.model.decoder.type             : transformer
2023-09-17 23:08:10,888 cfg.model.decoder.num_layers       : 3
2023-09-17 23:08:10,888 cfg.model.decoder.num_heads        : 8
2023-09-17 23:08:10,888 cfg.model.decoder.embeddings.embedding_dim : 512
2023-09-17 23:08:10,888 cfg.model.decoder.embeddings.scale : False
2023-09-17 23:08:10,889 cfg.model.decoder.embeddings.dropout : 0.1
2023-09-17 23:08:10,889 cfg.model.decoder.embeddings.norm_type : batch
2023-09-17 23:08:10,889 cfg.model.decoder.embeddings.activation_type : softsign
2023-09-17 23:08:10,889 cfg.model.decoder.hidden_size      : 512
2023-09-17 23:08:10,889 cfg.model.decoder.ff_size          : 2048
2023-09-17 23:08:10,889 cfg.model.decoder.dropout          : 0.1
2023-09-17 23:08:10,889 Data set sizes:
	train 15189,
	valid 1326,
	test 1802
2023-09-17 23:08:10,889 First training example:
	[GLS] And I call them decorative elements because basically all they're meant to do is to enrich and color the page.
	[TXT] and i call them decorative elements because basically all they're meant to do is to enrich and color the page.
2023-09-17 23:08:10,889 First 10 words (gls): (0) <si> (1) <unk> (2) <pad> (3) the (4) to (5) and (6) a (7) you (8) of (9) that
2023-09-17 23:08:10,889 First 10 words (txt): (0) <unk> (1) <pad> (2) <s> (3) </s> (4) the (5) to (6) and (7) you (8) a (9) of
2023-09-17 23:08:10,890 Number of unique glosses (types): 24080
2023-09-17 23:08:10,890 Number of unique words (types): 22649
2023-09-17 23:08:10,890 SignModel(
	encoder=TransformerEncoder(num_layers=3, num_heads=8),
	decoder=TransformerDecoder(num_layers=3, num_heads=8),
	sgn_embed=SpatialEmbeddings(embedding_dim=512, input_size=1024),
	txt_embed=Embeddings(embedding_dim=512, vocab_size=22649))
2023-09-17 23:08:10,916 EPOCH 1
/home/devtrio3/Downloads/sign-lang/lib/python3.7/site-packages/torchtext/data/field.py:359: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  var = torch.tensor(arr, dtype=self.dtype, device=device)
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/conda/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/devtrio3/Downloads/slt_changes/signjoey/__main__.py", line 37, in <module>
    main()
  File "/home/devtrio3/Downloads/slt_changes/signjoey/__main__.py", line 29, in main
    train(cfg_file=args.config_path)
  File "/home/devtrio3/Downloads/slt_changes/signjoey/training.py", line 1055, in train
    trainer.train_and_validate(train_data=train_data, valid_data=dev_data)
  File "/home/devtrio3/Downloads/slt_changes/signjoey/training.py", line 402, in train_and_validate
    batch, update=update
  File "/home/devtrio3/Downloads/slt_changes/signjoey/training.py", line 787, in _train_batch
    total_loss.backward()
  File "/home/devtrio3/Downloads/sign-lang/lib/python3.7/site-packages/torch/tensor.py", line 195, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/devtrio3/Downloads/sign-lang/lib/python3.7/site-packages/torch/autograd/__init__.py", line 99, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 266.00 MiB (GPU 0; 14.56 GiB total capacity; 2.06 GiB already allocated; 211.50 MiB free; 2.30 GiB reserved in total by PyTorch)